#! /bin/bash
set -eu
readonly NAME="${0##*/}"
readonly VERSION='0.2.0'

main() {
  parse_flags "$@"
  monitor | execute
}
parse_flags() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -C|--no-clear)
        CLEAR=0
        ;;
      -C*)
        CLEAR=0
        NEXT="-${1#-C}"
        shift
        set -- "$NEXT" "$@"
        continue
        ;;
      -d|--directory)
        if [ "$#" -lt 2 ]; then
          echo "$NAME: option requires an argument -- '${1##*-}'" >&2
          exit 2
        fi
        DIRECTORY="$2"
        shift
        ;;
      -d*)
        DIRECTORY="${1#-d}"
        ;;
      --directory=*)
        DIRECTORY="${1#--directory=}"
        ;;
      -h|--help)
        usage
        exit 0
        ;;
      -v|--version)
        version
        exit 0
        ;;
      --)
        shift
        break
        ;;
      -*)
        echo "$NAME: unrecognized option -- '${1##*-}'" >&2
        exit 2
        ;;
      *)
        break
        ;;
    esac
    shift
  done
  if [ "$#" -lt 1 ]; then
    echo "$NAME: no specify COMMAND" >&2
    exit 2
  fi
  if [ -z "$(command -v "$1")" ]; then
    echo "$NAME: $1: cannot execute" >&2
    exit 2
  fi
  COMMAND="$1"
  ARGS=("${@:2}")
  DIRECTORY="${DIRECTORY:="$(pwd)"}"
  CLEAR="${CLEAR:=1}"
}
usage() {
  cat <<EOF >&2
Usage: $NAME [OPTION]... COMMAND [ARGS]...
Execute COMMAND for changes to current directory.

Options:
  -C, --no-clear         suppress clear at execute
  -d, --directory=PATH   change monitored directory to PATH
  -h, --help             display this help text and exit
  -v, --version          output version information and exit
EOF
}
version() {
  echo "$VERSION" >&2
}
monitor() {
  inotifywait \
    --event   'create,delete,modify,move' \
    --exclude '.*\.sw[pox]' \
    --quiet \
    --monitor \
    --recursive \
    "$DIRECTORY"
}
execute() {
  set +eu
  while read -r; do
    # ignore continuous notification
    while read -r -t 0.3; do
      :
    done
    if [ "$CLEAR" -eq 1 ]; then
      clear
    fi
    "$COMMAND" "${ARGS[@]}"
    # ignore notification by the command
    while read -r -t 0.3; do
      :
    done
  done
}

main "$@"
exit 0
